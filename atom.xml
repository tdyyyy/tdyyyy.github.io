<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>菜鸟的挣扎</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.stardongy.xyz/"/>
  <updated>2019-01-10T10:23:25.016Z</updated>
  <id>https://www.stardongy.xyz/</id>
  
  <author>
    <name>庄周的鱼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql 连接的使用</title>
    <link href="https://www.stardongy.xyz/2018/12/04/Mysql%20%E8%BF%9E%E6%8E%A5%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.stardongy.xyz/2018/12/04/Mysql 连接的使用/</id>
    <published>2018-12-04T08:51:23.000Z</published>
    <updated>2019-01-10T10:23:25.016Z</updated>
    
    <content type="html"><![CDATA[<p>因为刚刚看完这里几天，结果被大笨蛋一问就懵逼了，所以。。。<br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1544163924313&amp;di=24478b841cfe1feb804affa81e9e085a&amp;imgtype=0&amp;src=http%3A%2F%2F5b0988e595225.cdn.sohucs.com%2Fimages%2F20171121%2F0e97da0bf9df4cb78b548549532a03a9.gif" alt="猥琐一笑"></p><p>JOIN 按照功能大致分为如下三类：</p><p>INNER JOIN（内连接,或等值连接）：获取两个表中字段匹配关系的记录。</p><p>LEFT JOIN（左连接）：获取左表所有记录，即使右表没有对应匹配的记录。</p><p>RIGHT JOIN（右连接）： 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</p><p>更多: <a href="http://note.youdao.com/noteshare?id=00a931d7817006d5aef7ff88f8747e6f&amp;sub=6937E7B04D8C48FFA3E7D927525A9F87" target="_blank" rel="noopener">我的笔记</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;因为刚刚看完这里几天，结果被大笨蛋一问就懵逼了，所以。。。&lt;br&gt;&lt;img src=&quot;https://timgsa.baidu.com/timg?image&amp;amp;quality=80&amp;amp;size=b9999_10000&amp;amp;sec=1544163924313&amp;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+GithubPages搭建个人博客</title>
    <link href="https://www.stardongy.xyz/2018/12/04/Hexo+GithubPages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://www.stardongy.xyz/2018/12/04/Hexo+GithubPages搭建个人博客/</id>
    <published>2018-12-04T08:34:04.658Z</published>
    <updated>2019-01-14T06:56:03.627Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Github：只是建立了一个github.io的库，没有账号的话可以注册一个。</li><li>Hexo：下载了它的安装包和主题，关于它部署博客的命令不用刻意记住，因为文档里都有，知道常用的命令就可以。</li><li>GithubPages：GitHub Pages是用来托管 GitHub 上静态网页的免费站点。只要你建立了github.io库，就默认在使用，它相当于一个服务器，可以保存你的所有博客文件。</li></ul><p>利用Hexo和GithubPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github上管理你的博客。</p><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><p>1.<a href="#part1" title="part1">获得个人网站域名，GitHub创建个人仓库</a><br>2.<a href="#part2" title="part2">安装Git，安装Node.js，安装Hexo, Hexo常用命令</a><br>3.<a href="#part3" title="part3">推送网站</a><br>4.<a href="#part4" title="part4">绑定域名</a><br>5.<a href="#part5" title="part5">更换主题</a><br>6.<a href="#part6" title="part6">目录的创建</a><br>7.<a href="#part7" title="part7">创作与发布文章</a>(简单了解<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">MarkDown语法</a>)<br>8.<a href="#part8" title="part8">寻找图床</a><br>9.<a href="#part9" title="part9">个性化设置</a><br>10.<a href="#part10" title="part10">推送到百度</a></p><h3 id="1-获得个人网站域名，GitHub创建个人仓库"><a href="#1-获得个人网站域名，GitHub创建个人仓库" class="headerlink" title="1.获得个人网站域名，GitHub创建个人仓库"></a><a id="part1" class="h3a">1.获得个人网站域名，GitHub创建个人仓库</a></h3><p>a.个人网站域名(去腾讯或阿里购买)<br>b.GitHub创建个人仓库<br>个人仓库 <a href="https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/" target="_blank" rel="noopener">命名方式</a><br>创建一个repo，名称为yourname.github.io, 其中yourname是你的github名称，按照这个规则创建才能直接使用<a href="https://yourname.github.io；" target="_blank" rel="noopener">https://yourname.github.io；</a><br>之后这个Setting中:</p><p><img src="https://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/setting.png" alt="Setting"><br>设置:Source设置为master，Custom domain设置为’你的域名’。<br>更多: <a href="https://github.com/tdyyyy/tdyyyy.github.io/settings" target="_blank" rel="noopener">我的GitHub</a></p><h3 id="2-安装Git，安装Node-js，安装Hexo，常用命令"><a href="#2-安装Git，安装Node-js，安装Hexo，常用命令" class="headerlink" title="2.安装Git，安装Node.js，安装Hexo，常用命令"></a><a id="part2" class="h3a">2.安装Git，安装Node.js，安装Hexo，常用命令</a></h3><h5 id="a-什么是Hexo"><a href="#a-什么是Hexo" class="headerlink" title="a.什么是Hexo?"></a>a.什么是Hexo?</h5><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Github地址</a>,<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo文档</a></p><h6 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h6><ul><li>极速生成静态页面</li><li>一键部署博客</li><li>丰富的插件支持</li><li>支持 Markdown</li></ul><h5 id="b-安装Hexo前提"><a href="#b-安装Hexo前提" class="headerlink" title="b.安装Hexo前提:"></a>b.安装Hexo前提:</h5><ul><li>Node.js</li><li>Git</li></ul><p>安装Node与Git之后，将Git与GitHub帐号绑定:<br>在你blog的文件目录下点击鼠标右键，之后点击Git Bash，设置user.name和user.email配置信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">$ git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>生成ssh密钥文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>将生成的密钥文件添加到GitHub中:<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/setting.png" alt="SSH"></p><p> 在gitbash中验证是否添加成功:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><h5 id="c-环境搭建好，可以安装Hexo了"><a href="#c-环境搭建好，可以安装Hexo了" class="headerlink" title="c.环境搭建好，可以安装Hexo了"></a>c.环境搭建好，可以安装Hexo了</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h5 id="d-测试网站"><a href="#d-测试网站" class="headerlink" title="d.测试网站"></a>d.测试网站</h5><p>在当前blog根目录下按顺序输入以下三条命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n my-test</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>这些命令在后面作介绍，完成后，打开浏览器输入地址：localhost:4000<br>刚刚的三个命令依次是新建一篇<strong>博客文章</strong>、<strong>生成网页</strong>、在<strong>本地预览</strong>的操作。</p><h5 id="e-常用命令"><a href="#e-常用命令" class="headerlink" title="e.常用命令"></a>e.常用命令</h5><table><thead><tr><th>命令</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td>npm install hexo -g</td><td style="text-align:left">安装Hexo</td></tr><tr><td>npm update hexo -g</td><td style="text-align:left">升级Hexo</td></tr><tr><td>hexo new page menuName</td><td style="text-align:left">新建名为menuName的目录</td></tr><tr><td>hexo n (hexo new)</td><td style="text-align:left">新建文章</td></tr><tr><td>hexo g (hexo generate)</td><td style="text-align:left">生成</td></tr><tr><td>hexo s (hexo server)</td><td style="text-align:left">启动服务预览</td></tr><tr><td>hexo d(hexo deploy)</td><td style="text-align:left">远程部署</td></tr></tbody></table><p>hexo server #Hexo会监视文件变动并自动更新，无须重启服务器<br>hexo server -s #静态模式<br>hexo server -p 5000 #更改端口<br>hexo server -i 192.168.1.1 #自定义 IP<br>hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</p><h3 id="3-推送网站"><a href="#3-推送网站" class="headerlink" title="3.推送网站"></a><a id="part3" class="h3a">3.推送网站</a></h3><p>接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图：<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/7v0%7Ecc%24f3ro5.png" alt="根目录"><br>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件：<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/90lj%7Dh13ll5o.png" alt="主题配置文件"><br>下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：<br>deploy:<br>type: git<br>repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git<br>branch: master<br>参考如下：<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/1547431692%281%29.png" alt="根目录下_config.yml"><br>保存站点配置文件。<br>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><p>这时，我们分别输入三条命令(建议每次都按照如下步骤部署)：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>其实第三条的 hexo d 就是部署网站命令，d是deploy的缩写。完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，<br>即 http://<strong><em>.github.io (</em></strong>为你的GitHub仓库名)，就可以看到网站内容了</p><h3 id="4-绑定域名"><a href="#4-绑定域名" class="headerlink" title="4.绑定域名"></a><a id="part4" class="h3a">4.绑定域名</a></h3><p>使用我们自己的个性化域名，这就需要绑定我们自己的域名。</p><p>第一步：对域名进行解析（我的是腾讯云服务器）:<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/1547432827%281%29.png" alt="域名绑定"><br>cmd中ping一下就能看到(ping <a href="tdyyyy.github.io">你的仓库名字</a>.github.io)<br>包括添加三条解析记录，185.199.108.153是我的GitHub的地址，<br>可以ping 你的github用户名.github.io ，然后把得到的ip地址填入进去。第三个记录类型是CNAME，CNAME的记录值是：<strong>你的github用户名</strong>.github.io 这里千万别弄错了。<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/yq%5D%292nrx%28_%40a.png" alt="解析地址"></p><p>第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/1547433787%281%29.png" alt="Custom domain"></p><p>点击save保存。<br>第三步，进入本地博客文件夹 ，进入/source目录下，创建一个记事本文件，输入你的域名带有www:，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/1547434660%281%29.png" alt="CNAME"><br>保存，命名为CNAME ，注意保存成所有文件而不是txt文件。<br>完成这三步，进入blog目录中，右键打开git命令行，依次输入:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>这时候打开浏览器在地址栏输入<a href="我的是https://stardongy.xyz/">你的个性化域名</a>将会直接进入你自己搭建的网站。</p><h3 id="5-更换主题"><a href="#5-更换主题" class="headerlink" title="5.更换主题"></a><a id="part5" class="h3a">5.更换主题</a></h3><p>Hexo初始化之后默认的主题是landscape,在themes文件夹里存放主题，如果不喜欢默认主题可以选择<a href="https://hexo.io/themes/" target="_blank" rel="noopener">其他主题</a>，例如我要改成black-blue主题，在github中搜索你要的主题名称，里面都会有该主题的如何使用的介绍，按着来就好了。在blog文件夹根目录下克隆你想要的主题<br>这是将black-blue主题下载到blog目录的themes主题下的black-blue文件夹中。打开站点的_config.yml配置文件，修改主题为black-blue：<br>在themes\black-blue中，打开主题的_config.yml配置文件，不是站点主题文件可以更改配置。</p><h5 id="安装常用插件："><a href="#安装常用插件：" class="headerlink" title="安装常用插件："></a>安装常用插件：</h5><h6 id="rss插件"><a href="#rss插件" class="headerlink" title="rss插件"></a>rss插件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><h6 id="站点sitemap生成插件"><a href="#站点sitemap生成插件" class="headerlink" title="站点sitemap生成插件"></a>站点sitemap生成插件</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h6 id="本地搜索插件集成"><a href="#本地搜索插件集成" class="headerlink" title="本地搜索插件集成"></a>本地搜索插件集成</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h4 id="全局配置，修改根目录下-config-yml"><a href="#全局配置，修改根目录下-config-yml" class="headerlink" title="全局配置，修改根目录下_config.yml"></a>全局配置，修改根目录下_config.yml</h4><h5 id="插件配置："><a href="#插件配置：" class="headerlink" title="插件配置："></a>插件配置：</h5><h6 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins:"></a>Plugins:</h6><ul><li>hexo-generator-feed</li><li>hexo-generator-sitemap</li><li>hexo-generator-baidu-sitemap<h6 id="rss设置："><a href="#rss设置：" class="headerlink" title="rss设置："></a>rss设置：</h6>feed:<br>type: atom<br>path: atom.xml<br>limit: 20<h6 id="本地搜索配置："><a href="#本地搜索配置：" class="headerlink" title="本地搜索配置："></a>本地搜索配置：</h6>search:<br>path: search.json<br>field: post<h6 id="站点地图，SEO搜索引擎需要："><a href="#站点地图，SEO搜索引擎需要：" class="headerlink" title="站点地图，SEO搜索引擎需要："></a>站点地图，SEO搜索引擎需要：</h6>sitemap:<br>path: sitemap.xml<br>baidusitemap:<br>path: baidusitemap.xml<br>如果出现把标题改为中文后乱码的情况，把编码改成unicodeutf8选项即可<br>主题配置，修改themes目录下_config.yml<br>比如修改背景图片，修改头像，修改一些页面上的链接，具体可以根据自己需要修改。</li></ul><h3 id="6-目录的创建"><a href="#6-目录的创建" class="headerlink" title="6.目录的创建"></a><a id="part6" class="h3a">6.目录的创建</a></h3><p>目录配置在主题的配置文件里:<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/B4NK%29R%40K4OPAH%29%24Z4H%7DMYYX.png" alt="创建目录"><br>在根目录里：<br>$ hexo new page about<br>在根目录的source里就增加一个about文件夹，进入about文件夹，编辑index.md，重新部署，点击目录关于我就可以看到about页面了。</p><h3 id="7-创作与发布文章"><a href="#7-创作与发布文章" class="headerlink" title="7.创作与发布文章"></a><a id="part7" class="h3a">7.创作与发布文章</a></h3><p>创建新的文章：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"你的文章名字"</span></span><br></pre></td></tr></table></figure></p><p>新建的blog在\blog\source_posts里 ，然后编辑文章(<a href="https://www.appinn.com/markdown/index.html" target="_blank" rel="noopener">使用markdown语法</a>)，然后发布文章<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="8-寻找图床"><a href="#8-寻找图床" class="headerlink" title="8.寻找图床"></a><a id="part8" class="h3a">8.寻找图床</a></h3><p>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，<br>因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，<br>然后获得外部链接，使用Markdown语法，<img src="外部链接" alt="图片信息"> 完成图片的插入，这种网站就被成为图床。<br>国内，一般是新浪云和七牛网。我使用的是阿里OSS。把需要的图片上传，然后复制URL就可以使用了。</p><h3 id="9-个性化设置"><a href="#9-个性化设置" class="headerlink" title="9.个性化设置"></a><a id="part9" class="h3a">9.个性化设置</a></h3><p><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/S%5B4M%4041P7VZW.png" alt="网易云音乐"><br>点击生成外链播放器，得到html文件。<br>在想加入地方直接引用，我是在在blog\themes\black-blue\layout_partial\left-col.ejs中加了网易云音乐的外部引用:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=330 height=86 src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=30352891&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure></p><h3 id="10-推送到百度"><a href="#10-推送到百度" class="headerlink" title="10.推送到百度"></a><a id="part10" class="h3a">10.推送到百度</a></h3><p><a href="https://www.jianshu.com/p/f37452d4978e" target="_blank" rel="noopener">参考</a></p><p>#####主动推送:<br>安装hexo-baidu-url-submit插件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure></p><p>同样在根目录下，把以下内容配置到_config.yml文件中:<br><img src="http://upload-tdy-images.oss-us-west-1.aliyuncs.com/blog-pic/blog_docs_pictures/1544087410%281%29.png" alt="配置"></p><p>我的百度资源平台: <a href="https://ziyuan.baidu.com/https/index" target="_blank" rel="noopener">https://ziyuan.baidu.com/https/index</a></p><p>#####自动推送:<br>一般在目录blog\themes\主题文件\layout_partial\head.ejs中加入JS，这样全站都有了：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">    var bp = document.createElement(<span class="string">'script'</span>);</span><br><span class="line">    var curProtocol = window.location.protocol.split(<span class="string">':'</span>)[0];</span><br><span class="line">    <span class="keyword">if</span> (curProtocol === <span class="string">'https'</span>) &#123;</span><br><span class="line">        bp.src = <span class="string">'https://zz.bdstatic.com/linksubmit/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        bp.src = <span class="string">'http://push.zhanzhang.baidu.com/push.js'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    var s = document.getElementsByTagName(<span class="string">"script"</span>)[0];</span><br><span class="line">    s.parentNode.insertBefore(bp, s);</span><br><span class="line">&#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>参考:<br>      <a href="https://www.jianshu.com/p/0a86c719a489" target="_blank" rel="noopener">https://www.jianshu.com/p/0a86c719a489</a><br>      <a href="https://zhuanlan.zhihu.com/p/26625249?utm_source=qq" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26625249?utm_source=qq</a><br>      <a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">https://www.cnblogs.com/visugar/p/6821777.html</a><br>      <a href="https://geeksblog.cc/hexo-theme.html" target="_blank" rel="noopener">https://geeksblog.cc/hexo-theme.html</a></p><h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Github：只是建立了一个github.io的库，没有账号的话可以注册一个。&lt;/li&gt;
&lt;li&gt;Hexo：下载了它的安装包和主题，关于它部署博客的命令不用刻意记住，因为文档里都有，知道常用的命令就可以。&lt;/li&gt;
&lt;li&gt;GithubPages：GitHub 
      
    
    </summary>
    
    
      <category term="Hexo+GithubPages" scheme="https://www.stardongy.xyz/tags/Hexo-GithubPages/"/>
    
  </entry>
  
</feed>
